<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/proyecto_final/MainActivity.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/proyecto_final/MainActivity.kt" />
              <option name="originalContent" value="package com.example.proyecto_final&#10;&#10;import android.content.Intent&#10;import android.net.Uri&#10;import android.os.Bundle&#10;import android.view.View&#10;import android.widget.Button&#10;import android.widget.ImageView&#10;import android.widget.TextView&#10;import androidx.activity.enableEdgeToEdge&#10;import android.util.Log&#10;import androidx.appcompat.app.AppCompatActivity&#10;import androidx.core.view.ViewCompat&#10;import androidx.core.view.WindowInsetsCompat&#10;import com.bumptech.glide.Glide&#10;import com.example.proyecto_final.Juegos.Buscaminas&#10;import com.example.proyecto_final.Juegos.MemoramaActivity&#10;import com.example.proyecto_final.Juegos.Snake&#10;import com.example.proyecto_final.Juegos.SudokuActivity&#10;import com.example.proyecto_final.utils.SessionManager&#10;&#10;// Actividad principal que muestra información del usuario y permite cerrar sesión&#10;&#10;class MainActivity : AppCompatActivity() {&#10;&#10;    private lateinit var sessionManager: SessionManager&#10;    // exoPlayerBuscaMinas removed; usamos GIF for BuscaMinas&#10;&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        enableEdgeToEdge()&#10;        setContentView(R.layout.activity_main)&#10;        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main)) { v, insets -&gt;&#10;            val systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars())&#10;            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom)&#10;            insets&#10;        }&#10;&#10;        sessionManager = SessionManager(this)&#10;&#10;        // Verificar si el usuario está logueado&#10;        if (!sessionManager.isLoggedIn()) {&#10;            startActivity(Intent(this, LoginActivity::class.java))&#10;            finish()&#10;            return&#10;        }&#10;&#10;        setupUserInfo()&#10;        setupLogoutButton()&#10;&#10;        // Cargar GIFs para Snake y Memorama (ImageView)&#10;        val imageSnake = findViewById&lt;ImageView&gt;(R.id.imageSnake)&#10;        val snakeUri = Uri.parse(&quot;android.resource://&quot; + packageName + &quot;/raw/snake&quot;)&#10;        Glide.with(this).asGif().load(snakeUri).into(imageSnake)&#10;        val btnPlaySnake = findViewById&lt;Button&gt;(R.id.btnPlaySnake)&#10;        imageSnake.setOnClickListener { btnPlaySnake.visibility = View.VISIBLE }&#10;        btnPlaySnake.setOnClickListener {&#10;            val intent = Intent(this, Snake::class.java)&#10;            startActivity(intent)&#10;        }&#10;&#10;        val imageMemorama = findViewById&lt;ImageView&gt;(R.id.imageMemorama)&#10;        val memoramaUri = Uri.parse(&quot;android.resource://&quot; + packageName + &quot;/raw/memorama&quot;)&#10;        Glide.with(this).asGif().load(memoramaUri).into(imageMemorama)&#10;        val btnPlayMemorama = findViewById&lt;Button&gt;(R.id.btnPlayMemorama)&#10;        imageMemorama.setOnClickListener { btnPlayMemorama.visibility = View.VISIBLE }&#10;        btnPlayMemorama.setOnClickListener {&#10;            val intent = Intent(this, MemoramaActivity::class.java)&#10;            startActivity(intent)&#10;        }&#10;&#10;        // Usar GIF para Sudoku: cargar en ImageView y mostrar botón al click&#10;        val imageSudoku = findViewById&lt;ImageView&gt;(R.id.imageSudoku)&#10;        // asegurar visible&#10;        imageSudoku.visibility = View.VISIBLE&#10;        // cargar vía Uri (más fiable en algunos dispositivos)&#10;        val sudokuUri = Uri.parse(&quot;android.resource://&quot; + packageName + &quot;/raw/sudoku&quot;)&#10;        Glide.with(this).asGif().load(sudokuUri).into(imageSudoku)&#10;        val btnPlaySudoku = findViewById&lt;Button&gt;(R.id.btnPlaySudoku)&#10;        imageSudoku.setOnClickListener {&#10;            btnPlaySudoku.visibility = View.VISIBLE&#10;        }&#10;        btnPlaySudoku.setOnClickListener {&#10;            val intent = Intent(this, SudokuActivity::class.java)&#10;            startActivity(intent)&#10;        }&#10;&#10;        // Cargar GIF para BuscaMinas y abrir la actividad&#10;        val imageBuscaMinas = findViewById&lt;ImageView&gt;(R.id.imageBuscaMinas)&#10;        // se renombró el gif a buscaminas_anim.gif para evitar conflicto con buscaminas.mp3&#10;        val buscaminasUri = Uri.parse(&quot;android.resource://&quot; + packageName + &quot;/raw/buscaminas_anim&quot;)&#10;        Glide.with(this).asGif().load(buscaminasUri).into(imageBuscaMinas)&#10;        val btnPlayBuscaMinas = findViewById&lt;Button&gt;(R.id.btnPlayBuscaMinas)&#10;        imageBuscaMinas.setOnClickListener { btnPlayBuscaMinas.visibility = View.VISIBLE }&#10;        btnPlayBuscaMinas.setOnClickListener {&#10;            val intent = Intent(this, Buscaminas::class.java)&#10;            startActivity(intent)&#10;        }&#10;    }&#10;&#10;    private fun setupUserInfo() {&#10;        val tvWelcome = findViewById&lt;TextView&gt;(R.id.tvWelcome)&#10;        val userName = sessionManager.getUserName()&#10;        tvWelcome.text = &quot;¡Bienvenido ${userName ?: &quot;Usuario&quot;}!&quot;&#10;    }&#10;&#10;    // Configurar el botón de cerrar sesión&#10;    private fun setupLogoutButton() {&#10;        val btnLogout = findViewById&lt;Button&gt;(R.id.btnLogout)&#10;        btnLogout.setOnClickListener {&#10;            // Cerrar sesión y limpiar datos&#10;            sessionManager.logout()&#10;&#10;            // Volver al login y limpiar el stack de actividades&#10;            val intent = Intent(this, LoginActivity::class.java)&#10;            intent.flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK&#10;            startActivity(intent)&#10;        }&#10;    }&#10;&#10;    override fun onDestroy() {&#10;        super.onDestroy()&#10;        // No ExoPlayer instances to release for Snake/Memorama/BuscaMinas (usamos GIFs)&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.proyecto_final&#10;&#10;import android.content.Intent&#10;import android.net.Uri&#10;import android.os.Bundle&#10;import android.view.View&#10;import android.widget.Button&#10;import android.widget.ImageView&#10;import android.widget.TextView&#10;import androidx.activity.enableEdgeToEdge&#10;import android.util.Log&#10;import androidx.appcompat.app.AppCompatActivity&#10;import androidx.core.view.ViewCompat&#10;import androidx.core.view.WindowInsetsCompat&#10;import com.bumptech.glide.Glide&#10;import com.example.proyecto_final.Juegos.Buscaminas&#10;import com.example.proyecto_final.Juegos.MemoramaActivity&#10;import com.example.proyecto_final.Juegos.Snake&#10;import com.example.proyecto_final.Juegos.SudokuActivity&#10;import com.example.proyecto_final.utils.SessionManager&#10;import android.widget.Toast&#10;&#10;// Actividad principal que muestra información del usuario y permite cerrar sesión&#10;&#10;class MainActivity : AppCompatActivity() {&#10;&#10;    private lateinit var sessionManager: SessionManager&#10;    // exoPlayerBuscaMinas removed; usamos GIF for BuscaMinas&#10;&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        enableEdgeToEdge()&#10;        setContentView(R.layout.activity_main)&#10;        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main)) { v, insets -&gt;&#10;            val systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars())&#10;            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom)&#10;            insets&#10;        }&#10;&#10;        sessionManager = SessionManager(this)&#10;&#10;        // Verificar si el usuario está logueado&#10;        if (!sessionManager.isLoggedIn()) {&#10;            startActivity(Intent(this, LoginActivity::class.java))&#10;            finish()&#10;            return&#10;        }&#10;&#10;        setupUserInfo()&#10;        setupLogoutButton()&#10;&#10;        // Cargar GIFs para Snake y Memorama (ImageView)&#10;        val imageSnake = findViewById&lt;ImageView&gt;(R.id.imageSnake)&#10;        val snakeUri = Uri.parse(&quot;android.resource://&quot; + packageName + &quot;/raw/snake&quot;)&#10;        Glide.with(this).asGif().load(snakeUri).into(imageSnake)&#10;        val btnPlaySnake = findViewById&lt;Button&gt;(R.id.btnPlaySnake)&#10;        imageSnake.setOnClickListener { btnPlaySnake.visibility = View.VISIBLE }&#10;        btnPlaySnake.setOnClickListener {&#10;            val intent = Intent(this, Snake::class.java)&#10;            startActivity(intent)&#10;        }&#10;&#10;        val imageMemorama = findViewById&lt;ImageView&gt;(R.id.imageMemorama)&#10;        val memoramaUri = Uri.parse(&quot;android.resource://&quot; + packageName + &quot;/raw/memorama&quot;)&#10;        Glide.with(this).asGif().load(memoramaUri).into(imageMemorama)&#10;        val btnPlayMemorama = findViewById&lt;Button&gt;(R.id.btnPlayMemorama)&#10;        imageMemorama.setOnClickListener { btnPlayMemorama.visibility = View.VISIBLE }&#10;        btnPlayMemorama.setOnClickListener {&#10;            val intent = Intent(this, MemoramaActivity::class.java)&#10;            startActivity(intent)&#10;        }&#10;&#10;        // Usar GIF para Sudoku: cargar en ImageView y mostrar botón al click&#10;        val imageSudoku = findViewById&lt;ImageView&gt;(R.id.imageSudoku)&#10;        // asegurar visible&#10;        imageSudoku.visibility = View.VISIBLE&#10;        // cargar vía Uri (más fiable en algunos dispositivos)&#10;        val sudokuUri = Uri.parse(&quot;android.resource://&quot; + packageName + &quot;/raw/sudoku&quot;)&#10;        Glide.with(this).asGif().load(sudokuUri).into(imageSudoku)&#10;        val btnPlaySudoku = findViewById&lt;Button&gt;(R.id.btnPlaySudoku)&#10;        imageSudoku.setOnClickListener {&#10;            btnPlaySudoku.visibility = View.VISIBLE&#10;        }&#10;        btnPlaySudoku.setOnClickListener {&#10;            val intent = Intent(this, SudokuActivity::class.java)&#10;            startActivity(intent)&#10;        }&#10;&#10;        // Cargar GIF para BuscaMinas y abrir la actividad&#10;        val imageBuscaMinas = findViewById&lt;ImageView&gt;(R.id.imageBuscaMinas)&#10;        // se renombró el gif a buscaminas_anim.gif para evitar conflicto con buscaminas.mp3&#10;        val buscaminasUri = Uri.parse(&quot;android.resource://&quot; + packageName + &quot;/raw/buscaminas_anim&quot;)&#10;        Glide.with(this).asGif().load(buscaminasUri).into(imageBuscaMinas)&#10;        val btnPlayBuscaMinas = findViewById&lt;Button&gt;(R.id.btnPlayBuscaMinas)&#10;        imageBuscaMinas.setOnClickListener { btnPlayBuscaMinas.visibility = View.VISIBLE }&#10;        btnPlayBuscaMinas.setOnClickListener {&#10;            val intent = Intent(this, Buscaminas::class.java)&#10;            startActivity(intent)&#10;        }&#10;&#10;        // --------- NUEVO: Wiring Tetris (imagen + botón) ---------&#10;        // Cargar GIF de Tetris si existe en res/raw/tetris (si no existe, Glide simplemente no mostrará animación)&#10;        val imageTetris = findViewById&lt;ImageView&gt;(R.id.imageTetris)&#10;        val tetrisUri = Uri.parse(&quot;android.resource://&quot; + packageName + &quot;/raw/tetris&quot;)&#10;        Glide.with(this).asGif().load(tetrisUri).into(imageTetris)&#10;        val btnPlayTetris = findViewById&lt;Button&gt;(R.id.btnPlayTetris)&#10;&#10;        // Mostrar el botón al tocar la imagen (mismo patrón que otros juegos)&#10;        imageTetris.setOnClickListener { btnPlayTetris.visibility = View.VISIBLE }&#10;&#10;        // Por ahora mostramos un Toast. En el siguiente paso, lo reemplazamos por Intent hacia TetrisActivity&#10;        btnPlayTetris.setOnClickListener {&#10;            // TODO: Reemplazar por: startActivity(Intent(this, TetrisActivity::class.java)) cuando esté creada y registrada&#10;            Toast.makeText(this, &quot;Tetris estará disponible en unos instantes&quot;, Toast.LENGTH_SHORT).show()&#10;        }&#10;    }&#10;&#10;    private fun setupUserInfo() {&#10;        val tvWelcome = findViewById&lt;TextView&gt;(R.id.tvWelcome)&#10;        val userName = sessionManager.getUserName()&#10;        tvWelcome.text = &quot;¡Bienvenido ${userName ?: &quot;Usuario&quot;}!&quot;&#10;    }&#10;&#10;    // Configurar el botón de cerrar sesión&#10;    private fun setupLogoutButton() {&#10;        val btnLogout = findViewById&lt;Button&gt;(R.id.btnLogout)&#10;        btnLogout.setOnClickListener {&#10;            // Cerrar sesión y limpiar datos&#10;            sessionManager.logout()&#10;&#10;            // Volver al login y limpiar el stack de actividades&#10;            val intent = Intent(this, LoginActivity::class.java)&#10;            intent.flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK&#10;            startActivity(intent)&#10;        }&#10;    }&#10;&#10;    override fun onDestroy() {&#10;        super.onDestroy()&#10;        // No ExoPlayer instances to release for Snake/Memorama/BuscaMinas (usamos GIFs)&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_main.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_main.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:id=&quot;@+id/main&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:padding=&quot;24dp&quot;&#10;    tools:context=&quot;.MainActivity&quot;&gt;&#10;&#10;    &lt;!-- Texto de bienvenida --&gt;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/tvWelcome&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Bienvenido a la App&quot;&#10;        android:textSize=&quot;28sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        android:textColor=&quot;@color/black&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot;&#10;        app:layout_constraintBottom_toTopOf=&quot;@+id/tvDescription&quot;&#10;        android:layout_marginTop=&quot;100dp&quot; /&gt;&#10;&#10;    &lt;!-- Descripción --&gt;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/tvDescription&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Aquí se mostrarán los juegos disponibles&quot;&#10;        android:textSize=&quot;16sp&quot;&#10;        android:textColor=&quot;@color/black&quot;&#10;        android:layout_marginTop=&quot;16dp&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/tvWelcome&quot; /&gt;&#10;&#10;    &lt;!-- Botón de cerrar sesión --&gt;&#10;    &lt;Button&#10;        android:id=&quot;@+id/btnLogout&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Cerrar Sesión&quot;&#10;        android:layout_marginBottom=&quot;50dp&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot; /&gt;&#10;&#10;    &lt;!-- PlayerView de ExoPlayer para mostrar el video, con ancho fijo y altura automática según la relación de aspecto --&gt;&#10;    &lt;!-- ImageView para mostrar GIF de Snake --&gt;&#10;    &lt;ImageView&#10;        android:id=&quot;@+id/imageSnake&quot;&#10;        android:layout_width=&quot;150dp&quot;&#10;        android:layout_height=&quot;0dp&quot;&#10;        android:adjustViewBounds=&quot;true&quot;&#10;        android:scaleType=&quot;centerCrop&quot;&#10;        android:background=&quot;@android:color/darker_gray&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/tvDescription&quot;&#10;        app:layout_constraintBottom_toTopOf=&quot;@+id/btnPlaySnake&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintHorizontal_bias=&quot;0.2&quot;&#10;        app:layout_constraintDimensionRatio=&quot;16:9&quot;&#10;        android:layout_marginTop=&quot;20dp&quot;&#10;        android:contentDescription=&quot;GIF Snake&quot; /&gt;&#10;&#10;    &lt;!-- Botón para iniciar el juego, inicialmente invisible --&gt;&#10;    &lt;Button&#10;        android:id=&quot;@+id/btnPlaySnake&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Jugar Snake&quot;&#10;        android:visibility=&quot;gone&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/imageSnake&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;@+id/imageSnake&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;@+id/imageSnake&quot;&#10;        android:layout_marginTop=&quot;8dp&quot; /&gt;&#10;&#10;    &lt;!-- Segundo PlayerView para memorama --&gt;&#10;    &lt;!-- ImageView para mostrar GIF de Memorama --&gt;&#10;    &lt;ImageView&#10;        android:id=&quot;@+id/imageMemorama&quot;&#10;        android:layout_width=&quot;150dp&quot;&#10;        android:layout_height=&quot;0dp&quot;&#10;        android:adjustViewBounds=&quot;true&quot;&#10;        android:scaleType=&quot;centerCrop&quot;&#10;        android:background=&quot;@android:color/darker_gray&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/btnPlaySnake&quot;&#10;        app:layout_constraintBottom_toTopOf=&quot;@+id/btnPlayMemorama&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintHorizontal_bias=&quot;0.2&quot;&#10;        app:layout_constraintDimensionRatio=&quot;16:9&quot;&#10;        android:layout_marginTop=&quot;20dp&quot;&#10;        android:contentDescription=&quot;GIF Memorama&quot; /&gt;&#10;&#10;    &lt;!-- Botón para iniciar Memorama, inicialmente invisible --&gt;&#10;    &lt;Button&#10;        android:id=&quot;@+id/btnPlayMemorama&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Jugar Memorama&quot;&#10;        android:visibility=&quot;gone&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/imageMemorama&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;@+id/imageMemorama&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;@+id/imageMemorama&quot;&#10;        android:layout_marginTop=&quot;8dp&quot; /&gt;&#10;&#10;    &lt;!-- Tercer PlayerView para Sudoku --&gt;&#10;    &lt;!-- ImageView para mostrar GIF de Sudoku --&gt;&#10;    &lt;ImageView&#10;        android:id=&quot;@+id/imageSudoku&quot;&#10;        android:layout_width=&quot;150dp&quot;&#10;        android:layout_height=&quot;0dp&quot;&#10;        android:visibility=&quot;visible&quot;&#10;        android:adjustViewBounds=&quot;true&quot;&#10;        android:scaleType=&quot;centerCrop&quot;&#10;        android:background=&quot;@android:color/darker_gray&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/btnPlayMemorama&quot;&#10;        app:layout_constraintHorizontal_bias=&quot;0.2&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintDimensionRatio=&quot;16:9&quot;&#10;        android:layout_marginTop=&quot;20dp&quot;&#10;        android:contentDescription=&quot;GIF Sudoku&quot; /&gt;&#10;&#10;    &lt;!-- Botón para iniciar Sudoku, inicialmente invisible --&gt;&#10;    &lt;Button&#10;        android:id=&quot;@+id/btnPlaySudoku&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Jugar Sudoku&quot;&#10;        android:visibility=&quot;gone&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/imageSudoku&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;@+id/imageSudoku&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;@+id/imageSudoku&quot;&#10;        android:layout_marginTop=&quot;8dp&quot; /&gt;&#10;&#10;    &lt;!-- Cuarto PlayerView para BuscaMinas --&gt;&#10;    &lt;!-- ImageView para mostrar GIF de BuscaMinas --&gt;&#10;    &lt;ImageView&#10;        android:id=&quot;@+id/imageBuscaMinas&quot;&#10;        android:layout_width=&quot;150dp&quot;&#10;        android:layout_height=&quot;0dp&quot;&#10;        android:adjustViewBounds=&quot;true&quot;&#10;        android:scaleType=&quot;centerCrop&quot;&#10;        android:background=&quot;@android:color/darker_gray&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/btnPlaySudoku&quot;&#10;        app:layout_constraintBottom_toTopOf=&quot;@+id/btnPlayBuscaMinas&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintHorizontal_bias=&quot;0.2&quot;&#10;        app:layout_constraintDimensionRatio=&quot;16:9&quot;&#10;        android:layout_marginTop=&quot;20dp&quot;&#10;        android:contentDescription=&quot;GIF BuscaMinas&quot; /&gt;&#10;&#10;    &lt;!-- Botón para iniciar BuscaMinas, inicialmente invisible --&gt;&#10;    &lt;Button&#10;        android:id=&quot;@+id/btnPlayBuscaMinas&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Jugar BuscaMinas&quot;&#10;        android:visibility=&quot;gone&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/imageBuscaMinas&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;@+id/imageBuscaMinas&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;@+id/imageBuscaMinas&quot;&#10;        android:layout_marginTop=&quot;8dp&quot; /&gt;&#10;&#10;    &lt;!-- ImageView para mostrar GIF de Tetris (placeholder) --&gt;&#10;    &lt;ImageView&#10;        android:id=&quot;@+id/imageTetris&quot;&#10;        android:layout_width=&quot;150dp&quot;&#10;        android:layout_height=&quot;0dp&quot;&#10;        android:adjustViewBounds=&quot;true&quot;&#10;        android:scaleType=&quot;centerCrop&quot;&#10;        android:background=&quot;@android:color/darker_gray&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/btnPlayBuscaMinas&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintHorizontal_bias=&quot;0.2&quot;&#10;        app:layout_constraintDimensionRatio=&quot;16:9&quot;&#10;        android:layout_marginTop=&quot;20dp&quot;&#10;        android:contentDescription=&quot;GIF Tetris&quot; /&gt;&#10;&#10;    &lt;!-- Botón para iniciar Tetris (se mostrará al tocar el GIF) --&gt;&#10;    &lt;Button&#10;        android:id=&quot;@+id/btnPlayTetris&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Jugar Tetris&quot;&#10;        android:visibility=&quot;gone&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/imageTetris&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;@+id/imageTetris&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;@+id/imageTetris&quot;&#10;        android:layout_marginTop=&quot;8dp&quot; /&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:id=&quot;@+id/main&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:padding=&quot;24dp&quot;&#10;    tools:context=&quot;.MainActivity&quot;&gt;&#10;&#10;    &lt;!-- Texto de bienvenida --&gt;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/tvWelcome&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Bienvenido a la App&quot;&#10;        android:textSize=&quot;28sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        android:textColor=&quot;@color/black&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot;&#10;        app:layout_constraintBottom_toTopOf=&quot;@+id/tvDescription&quot;&#10;        android:layout_marginTop=&quot;100dp&quot; /&gt;&#10;&#10;    &lt;!-- Descripción --&gt;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/tvDescription&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Aquí se mostrarán los juegos disponibles&quot;&#10;        android:textSize=&quot;16sp&quot;&#10;        android:textColor=&quot;@color/black&quot;&#10;        android:layout_marginTop=&quot;16dp&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/tvWelcome&quot; /&gt;&#10;&#10;    &lt;!-- Botón de cerrar sesión --&gt;&#10;    &lt;Button&#10;        android:id=&quot;@+id/btnLogout&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Cerrar Sesión&quot;&#10;        android:layout_marginBottom=&quot;50dp&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot; /&gt;&#10;&#10;    &lt;!-- PlayerView de ExoPlayer para mostrar el video, con ancho fijo y altura automática según la relación de aspecto --&gt;&#10;    &lt;!-- ImageView para mostrar GIF de Snake --&gt;&#10;    &lt;ImageView&#10;        android:id=&quot;@+id/imageSnake&quot;&#10;        android:layout_width=&quot;150dp&quot;&#10;        android:layout_height=&quot;0dp&quot;&#10;        android:adjustViewBounds=&quot;true&quot;&#10;        android:scaleType=&quot;centerCrop&quot;&#10;        android:background=&quot;@android:color/darker_gray&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/tvDescription&quot;&#10;        app:layout_constraintBottom_toTopOf=&quot;@+id/btnPlaySnake&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintHorizontal_bias=&quot;0.2&quot;&#10;        app:layout_constraintDimensionRatio=&quot;16:9&quot;&#10;        android:layout_marginTop=&quot;20dp&quot;&#10;        android:contentDescription=&quot;GIF Snake&quot; /&gt;&#10;&#10;    &lt;!-- Botón para iniciar el juego, inicialmente invisible --&gt;&#10;    &lt;Button&#10;        android:id=&quot;@+id/btnPlaySnake&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Jugar Snake&quot;&#10;        android:visibility=&quot;gone&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/imageSnake&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;@+id/imageSnake&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;@+id/imageSnake&quot;&#10;        android:layout_marginTop=&quot;8dp&quot; /&gt;&#10;&#10;    &lt;!-- Segundo PlayerView para memorama --&gt;&#10;    &lt;!-- ImageView para mostrar GIF de Memorama --&gt;&#10;    &lt;ImageView&#10;        android:id=&quot;@+id/imageMemorama&quot;&#10;        android:layout_width=&quot;150dp&quot;&#10;        android:layout_height=&quot;0dp&quot;&#10;        android:adjustViewBounds=&quot;true&quot;&#10;        android:scaleType=&quot;centerCrop&quot;&#10;        android:background=&quot;@android:color/darker_gray&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/btnPlaySnake&quot;&#10;        app:layout_constraintBottom_toTopOf=&quot;@+id/btnPlayMemorama&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintHorizontal_bias=&quot;0.2&quot;&#10;        app:layout_constraintDimensionRatio=&quot;16:9&quot;&#10;        android:layout_marginTop=&quot;20dp&quot;&#10;        android:contentDescription=&quot;GIF Memorama&quot; /&gt;&#10;&#10;    &lt;!-- Botón para iniciar Memorama, inicialmente invisible --&gt;&#10;    &lt;Button&#10;        android:id=&quot;@+id/btnPlayMemorama&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Jugar Memorama&quot;&#10;        android:visibility=&quot;gone&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/imageMemorama&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;@+id/imageMemorama&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;@+id/imageMemorama&quot;&#10;        android:layout_marginTop=&quot;8dp&quot; /&gt;&#10;&#10;    &lt;!-- Tercer PlayerView para Sudoku --&gt;&#10;    &lt;!-- ImageView para mostrar GIF de Sudoku --&gt;&#10;    &lt;ImageView&#10;        android:id=&quot;@+id/imageSudoku&quot;&#10;        android:layout_width=&quot;150dp&quot;&#10;        android:layout_height=&quot;0dp&quot;&#10;        android:visibility=&quot;visible&quot;&#10;        android:adjustViewBounds=&quot;true&quot;&#10;        android:scaleType=&quot;centerCrop&quot;&#10;        android:background=&quot;@android:color/darker_gray&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/btnPlayMemorama&quot;&#10;        app:layout_constraintHorizontal_bias=&quot;0.2&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintDimensionRatio=&quot;16:9&quot;&#10;        android:layout_marginTop=&quot;20dp&quot;&#10;        android:contentDescription=&quot;GIF Sudoku&quot; /&gt;&#10;&#10;    &lt;!-- Botón para iniciar Sudoku, inicialmente invisible --&gt;&#10;    &lt;Button&#10;        android:id=&quot;@+id/btnPlaySudoku&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Jugar Sudoku&quot;&#10;        android:visibility=&quot;gone&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/imageSudoku&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;@+id/imageSudoku&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;@+id/imageSudoku&quot;&#10;        android:layout_marginTop=&quot;8dp&quot; /&gt;&#10;&#10;    &lt;!-- Cuarto PlayerView para BuscaMinas --&gt;&#10;    &lt;!-- ImageView para mostrar GIF de BuscaMinas --&gt;&#10;    &lt;ImageView&#10;        android:id=&quot;@+id/imageBuscaMinas&quot;&#10;        android:layout_width=&quot;150dp&quot;&#10;        android:layout_height=&quot;0dp&quot;&#10;        android:adjustViewBounds=&quot;true&quot;&#10;        android:scaleType=&quot;centerCrop&quot;&#10;        android:background=&quot;@android:color/darker_gray&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/btnPlaySudoku&quot;&#10;        app:layout_constraintBottom_toTopOf=&quot;@+id/btnPlayBuscaMinas&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintHorizontal_bias=&quot;0.2&quot;&#10;        app:layout_constraintDimensionRatio=&quot;16:9&quot;&#10;        android:layout_marginTop=&quot;20dp&quot;&#10;        android:contentDescription=&quot;GIF BuscaMinas&quot; /&gt;&#10;&#10;    &lt;!-- Botón para iniciar BuscaMinas, inicialmente invisible --&gt;&#10;    &lt;Button&#10;        android:id=&quot;@+id/btnPlayBuscaMinas&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Jugar BuscaMinas&quot;&#10;        android:visibility=&quot;gone&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/imageBuscaMinas&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;@+id/imageBuscaMinas&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;@+id/imageBuscaMinas&quot;&#10;        android:layout_marginTop=&quot;8dp&quot; /&gt;&#10;&#10;    &lt;!-- ImageView para mostrar GIF de Tetris (placeholder) --&gt;&#10;    &lt;ImageView&#10;        android:id=&quot;@+id/imageTetris&quot;&#10;        android:layout_width=&quot;150dp&quot;&#10;        android:layout_height=&quot;0dp&quot;&#10;        android:adjustViewBounds=&quot;true&quot;&#10;        android:scaleType=&quot;centerCrop&quot;&#10;        android:background=&quot;@android:color/darker_gray&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/btnPlayBuscaMinas&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintHorizontal_bias=&quot;0.2&quot;&#10;        app:layout_constraintDimensionRatio=&quot;16:9&quot;&#10;        android:layout_marginTop=&quot;20dp&quot;&#10;        android:contentDescription=&quot;GIF Tetris&quot; /&gt;&#10;&#10;    &lt;!-- Botón para iniciar Tetris (se mostrará al tocar el GIF) --&gt;&#10;    &lt;Button&#10;        android:id=&quot;@+id/btnPlayTetris&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Jugar Tetris&quot;&#10;        android:visibility=&quot;gone&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/imageTetris&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;@+id/imageTetris&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;@+id/imageTetris&quot;&#10;        android:layout_marginTop=&quot;8dp&quot; /&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>