<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/proyecto_final/MainActivity.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/proyecto_final/MainActivity.kt" />
              <option name="originalContent" value="package com.example.proyecto_final&#10;&#10;import android.content.Intent&#10;import android.net.Uri&#10;import android.os.Bundle&#10;import android.view.View&#10;import android.widget.Button&#10;import android.widget.TextView&#10;import androidx.activity.enableEdgeToEdge&#10;import androidx.appcompat.app.AppCompatActivity&#10;import androidx.core.view.ViewCompat&#10;import androidx.core.view.WindowInsetsCompat&#10;import com.example.proyecto_final.Juegos.Snake&#10;import com.example.proyecto_final.utils.SessionManager&#10;import com.google.android.exoplayer2.ExoPlayer&#10;import com.google.android.exoplayer2.MediaItem&#10;import com.google.android.exoplayer2.source.RawResourceDataSource&#10;import com.google.android.exoplayer2.ui.PlayerView&#10;&#10;// Actividad principal que muestra información del usuario y permite cerrar sesión&#10;&#10;class MainActivity : AppCompatActivity() {&#10;&#10;    private lateinit var sessionManager: SessionManager&#10;    private lateinit var exoPlayer: ExoPlayer&#10;&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        enableEdgeToEdge()&#10;        setContentView(R.layout.activity_main)&#10;        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main)) { v, insets -&gt;&#10;            val systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars())&#10;            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom)&#10;            insets&#10;        }&#10;&#10;        sessionManager = SessionManager(this)&#10;&#10;        // Verificar si el usuario está logueado&#10;        if (!sessionManager.isLoggedIn()) {&#10;            startActivity(Intent(this, LoginActivity::class.java))&#10;            finish()&#10;            return&#10;        }&#10;&#10;        setupUserInfo()&#10;        setupLogoutButton()&#10;&#10;        // Configurar ExoPlayer para el video&#10;        val playerView = findViewById&lt;PlayerView&gt;(R.id.videoButton)&#10;        exoPlayer = ExoPlayer.Builder(this).build()&#10;        playerView.player = exoPlayer&#10;        val rawUri = RawResourceDataSource.buildRawResourceUri(R.raw.prueba_para_juego)&#10;        val mediaItem = MediaItem.fromUri(rawUri)&#10;        exoPlayer.setMediaItem(mediaItem)&#10;        exoPlayer.prepare()&#10;        playerView.setOnClickListener {&#10;            if (!exoPlayer.isPlaying) {&#10;                exoPlayer.play()&#10;            }&#10;        }&#10;        val btnPlaySnake = findViewById&lt;Button&gt;(R.id.btnPlaySnake)&#10;        btnPlaySnake.setOnClickListener {&#10;            val intent = Intent(this, Snake::class.java)&#10;            startActivity(intent)&#10;        }&#10;    }&#10;&#10;    private fun setupUserInfo() {&#10;        val tvWelcome = findViewById&lt;TextView&gt;(R.id.tvWelcome)&#10;        val userName = sessionManager.getUserName()&#10;        tvWelcome.text = &quot;¡Bienvenido ${userName ?: &quot;Usuario&quot;}!&quot;&#10;    }&#10;&#10;    // Configurar el botón de cerrar sesión&#10;    private fun setupLogoutButton() {&#10;        val btnLogout = findViewById&lt;Button&gt;(R.id.btnLogout)&#10;        btnLogout.setOnClickListener {&#10;            // Cerrar sesión y limpiar datos&#10;            sessionManager.logout()&#10;&#10;            // Volver al login y limpiar el stack de actividades&#10;            val intent = Intent(this, LoginActivity::class.java)&#10;            intent.flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK&#10;            startActivity(intent)&#10;        }&#10;    }&#10;&#10;    override fun onDestroy() {&#10;        super.onDestroy()&#10;        if (::exoPlayer.isInitialized) {&#10;            exoPlayer.release()&#10;        }&#10;    }&#10;}" />
              <option name="updatedContent" value="package com.example.proyecto_final&#10;&#10;import android.content.Intent&#10;import android.net.Uri&#10;import android.os.Bundle&#10;import android.view.View&#10;import android.widget.Button&#10;import android.widget.TextView&#10;import androidx.activity.enableEdgeToEdge&#10;import androidx.appcompat.app.AppCompatActivity&#10;import androidx.core.view.ViewCompat&#10;import androidx.core.view.WindowInsetsCompat&#10;import com.example.proyecto_final.Juegos.Snake&#10;import com.example.proyecto_final.utils.SessionManager&#10;import com.google.android.exoplayer2.ExoPlayer&#10;import com.google.android.exoplayer2.MediaItem&#10;import com.google.android.exoplayer2.ui.PlayerView&#10;&#10;// Actividad principal que muestra información del usuario y permite cerrar sesión&#10;&#10;class MainActivity : AppCompatActivity() {&#10;&#10;    private lateinit var sessionManager: SessionManager&#10;    private lateinit var exoPlayer: ExoPlayer&#10;&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        enableEdgeToEdge()&#10;        setContentView(R.layout.activity_main)&#10;        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main)) { v, insets -&gt;&#10;            val systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars())&#10;            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom)&#10;            insets&#10;        }&#10;&#10;        sessionManager = SessionManager(this)&#10;&#10;        // Verificar si el usuario está logueado&#10;        if (!sessionManager.isLoggedIn()) {&#10;            startActivity(Intent(this, LoginActivity::class.java))&#10;            finish()&#10;            return&#10;        }&#10;&#10;        setupUserInfo()&#10;        setupLogoutButton()&#10;&#10;        // Configurar ExoPlayer para el video&#10;        val playerView = findViewById&lt;PlayerView&gt;(R.id.videoButton)&#10;        exoPlayer = ExoPlayer.Builder(this).build()&#10;        playerView.player = exoPlayer&#10;        val rawUri = Uri.parse(&quot;android.resource://&quot; + packageName + &quot;/&quot; + R.raw.prueba_para_juego)&#10;        val mediaItem = MediaItem.fromUri(rawUri)&#10;        exoPlayer.setMediaItem(mediaItem)&#10;        exoPlayer.prepare()&#10;        playerView.setOnClickListener {&#10;            if (!exoPlayer.isPlaying) {&#10;                exoPlayer.play()&#10;            }&#10;        }&#10;        val btnPlaySnake = findViewById&lt;Button&gt;(R.id.btnPlaySnake)&#10;        btnPlaySnake.setOnClickListener {&#10;            val intent = Intent(this, Snake::class.java)&#10;            startActivity(intent)&#10;        }&#10;    }&#10;&#10;    private fun setupUserInfo() {&#10;        val tvWelcome = findViewById&lt;TextView&gt;(R.id.tvWelcome)&#10;        val userName = sessionManager.getUserName()&#10;        tvWelcome.text = &quot;¡Bienvenido ${userName ?: &quot;Usuario&quot;}!&quot;&#10;    }&#10;&#10;    // Configurar el botón de cerrar sesión&#10;    private fun setupLogoutButton() {&#10;        val btnLogout = findViewById&lt;Button&gt;(R.id.btnLogout)&#10;        btnLogout.setOnClickListener {&#10;            // Cerrar sesión y limpiar datos&#10;            sessionManager.logout()&#10;&#10;            // Volver al login y limpiar el stack de actividades&#10;            val intent = Intent(this, LoginActivity::class.java)&#10;            intent.flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK&#10;            startActivity(intent)&#10;        }&#10;    }&#10;&#10;    override fun onDestroy() {&#10;        super.onDestroy()&#10;        if (::exoPlayer.isInitialized) {&#10;            exoPlayer.release()&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>